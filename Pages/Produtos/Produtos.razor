@page "/produtos/criar"
@inject AppDbContext _context
@inject NavigationManager _navigationManager

<h3>Produtos</h3>

<EditForm Model="_model" OnValidSubmit="@HandlerSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="mb-3">
        <label for="Nome" class="form-label">Nome</label>
        <InputText class="form-control" type="text" id="Nome" @bind-Value="_model.Nome" />
    </div>   
    
    <div class="mb-3">
        <label for="Preco" class="form-label">Preco</label>
        <InputNumber class="form-control" type="text" id="Preco" @bind-Value="_model.Preco" />
    </div>    
    
    <div class="mb-3">
        <label for="CategoriaId" class="form-label">Categoria</label>
        <InputSelect id="CategoriaId" @bind-Value="_model.CategoriaId" class="form-control"> 
            @foreach (var categoria in _categorias)
            {
                <option value="@categoria.Id">
                    @categoria.Nome
                </option>                
            }
        </InputSelect>
    </div>

    <br />

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @_errorMessage
        </div>
        
    }

    <button class="btn btn-success" type="submit" >
        Salvar
    </button>

</EditForm>

@code {

    private Produto _model = new();
    private List<Categoria> _categorias = new();
    string? _errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        _categorias = await _context
            .Categorias
            .AsNoTracking()
            .ToListAsync();

        _model.CategoriaId = _categorias[0].Id;
    }

    async Task HandlerSubmit()
    {
        try
        {
            await _context.Set<Produto>().AddAsync(_model);
            await _context.SaveChangesAsync();

            _navigationManager.NavigateTo("/produtos");
        }
        catch (Exception)
        {
            _errorMessage = "Falha ao persistir os dados.";
        }

    }


}
