@page "/produtos"
@inject AppDbContext _context

<h1>Produtos</h1>


<a href="produtos/criar" class="btn btn-primary">
    <i class="oi oi-plus"></i> Criar
</a>
<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Nome</th>
            <th scope="col">Preço</th>
            <th scope="col">Categoria</th>
            <th scope="col">Data Criação</th>
            <th scope="col">Data Alteração</th>
            <th scope="col">Ativo</th>
            <th scope="col">Opções</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var produto in _produtos)
        {
            <tr>
                <th scope="row">@produto.Id</th>
                <td>@produto.Nome</td>
                <td>@produto.Preco.ToString("C", new CultureInfo("pt-BR"))</td>
                <td>@produto.Categoria?.Nome</td>
                <td>@produto.DataCriacao.ToString("dd/MM/yyyy")</td>
                <td>@produto.DataAlteracao?.ToString("dd/MM/yyyy")</td>
                <td>@produto.Ativo</td>
                <td>
                    <a href="produtos/editar/@produto.Id" class="btn">
                        <i class="oi oi-pencil"></i>
                    </a> 
                    <a href="produtos/delete/@produto.Id" class="btn">
                        <i class="oi oi-trash"></i>
                    </a>
                </td>
            </tr>            
        }
    </tbody>
    
</table>

@code{

    List<Produto> _produtos = new();

    protected override async Task OnInitializedAsync()
    {
        _produtos = await _context
            .Produto
            .Include(x => x.Categoria)
            .AsNoTracking()
            .OrderBy(x => x.Id)
            .ToListAsync();
    }
}